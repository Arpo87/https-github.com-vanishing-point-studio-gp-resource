/**
 * This file was automatically generated by Nexus 0.11.6
 * Do not make changes to this file directly
 */

import * as types from "../types"


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Nro: { // root type
    about?: string | null; // String
    expensesCampaigns?: number | null; // Float
    expensesCampaignSupport?: number | null; // Float
    expensesContributions?: number | null; // Float
    expensesOrgSupport?: number | null; // Float
    id: string; // ID!
    incomeFundraising?: number | null; // Float
    incomeGrants?: number | null; // Float
    incomeOther?: number | null; // Float
    name: string; // String!
    staffCampaigns?: number | null; // Int
    staffCampaignSupport?: number | null; // Int
    staffFundraising?: number | null; // Int
    staffOrgSupport?: number | null; // Int
  }
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
}

export interface NexusGenFieldTypes {
  Nro: { // field return type
    about: string | null; // String
    expensesCampaigns: number | null; // Float
    expensesCampaignSupport: number | null; // Float
    expensesContributions: number | null; // Float
    expensesOrgSupport: number | null; // Float
    id: string; // ID!
    incomeFundraising: number | null; // Float
    incomeGrants: number | null; // Float
    incomeOther: number | null; // Float
    name: string; // String!
    staffCampaigns: number | null; // Int
    staffCampaignSupport: number | null; // Int
    staffFundraising: number | null; // Int
    staffOrgSupport: number | null; // Int
  }
  Query: { // field return type
    nros: NexusGenRootTypes['Nro'][] | null; // [Nro!]
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Nro" | "Query";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: types.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}